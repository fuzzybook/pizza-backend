package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"
	"pizza-backend/models"
)

// User is the resolver for the User field.
func (r *sessionResolver) User(ctx context.Context, obj *models.Session) (*models.User, error) {
	return models.GetUserById(ctx, obj.ID)
}

// Roles is the resolver for the roles field.
func (r *userResolver) Roles(ctx context.Context, obj *models.User) ([]models.UserRole, error) {
	return obj.Roles, nil
}

// Types is the resolver for the types field.
func (r *newUserResolver) Types(ctx context.Context, obj *models.NewUser, data models.UserType) error {
	panic(fmt.Errorf("not implemented: Types - types"))
}

// Session returns SessionResolver implementation.
func (r *Resolver) Session() SessionResolver { return &sessionResolver{r} }

// User returns UserResolver implementation.
func (r *Resolver) User() UserResolver { return &userResolver{r} }

// NewUser returns NewUserResolver implementation.
func (r *Resolver) NewUser() NewUserResolver { return &newUserResolver{r} }

type sessionResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
type newUserResolver struct{ *Resolver }
